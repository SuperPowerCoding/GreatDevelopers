import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

	// Complete the maxSubarray function below.
    static long[] maxSubarray(long[] arr) {
    	boolean debugPrint = true;
    	
    	long[][] sum = new long[arr.length][arr.length];
    	
    	long subArrMax = arr[0];
    	long subSeqMax = arr[0];

    	for(int i = 0 ; i < sum.length ; i++)
    	{
    		for(int j = i ; j < sum.length ; j++)
    		{
    			if(j == i)
    			{
    				sum[i][j] = arr[j];
    			}
    			else
    			{
    				if( i == 0 )
    				{
    					sum[i][j] = arr[j] + sum[i][j-1];
    				}
    				else
    				{
    					sum[i][j] = sum[i-1][j] - arr[i-1];
    				}    				
    			}
    			
    			if(sum[i][j] > subArrMax) subArrMax = sum[i][j];
    		}
    		
    		if(i != 0) 
    		{
    			if(arr[i] > 0)
    			{
    				subSeqMax += arr[i];
    			}
    			else
    			{
    				if(subSeqMax < 0 )
    				{
    					if(subSeqMax < arr[i])
    					{
        					subSeqMax = arr[i];
    					}
    				}    				
    			}    			
    		}
    		
    		
    		if(debugPrint)
    		{
    			System.out.print(subSeqMax+" ");
    		}
    		
    	}
    	
    	if(debugPrint)
    	{
    		System.out.println();
    		System.out.println("----------");
    		for(int i = 0 ; i < sum.length ; i++)
        	{
        		for(int j = 0 ; j < sum.length ; j++)
        		{
        			System.out.print(sum[i][j]+" ");
        		}
        		System.out.println();
        	}
    		System.out.println("----------");
    	}
    	
    	
    	long[] result = new long[2];
    	result[0] = subArrMax;	// 2, -1, 2, 3, 4
    	result[1] = subSeqMax;	// 2,  2, 3, 4
    	return result;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        // BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            long[] arr = new long[n];

            String[] arrItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int i = 0; i < n; i++) {
                long arrItem = Long.parseLong(arrItems[i]);
                arr[i] = arrItem;
            }

            long[] result = maxSubarray(arr);
            
            for (int i = 0; i < result.length; i++) {
                // bufferedWriter.write(String.valueOf(result[i]));
            	System.out.print(result[i]);

                if (i != result.length - 1) {
                    // bufferedWriter.write(" ");
                	System.out.print(" ");
                }
            }
            
            System.out.println();
            // bufferedWriter.newLine();
        }

        // bufferedWriter.close();

        scanner.close();
    }
}
